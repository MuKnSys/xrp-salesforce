<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>57.0</apiVersion>
    <decisions>
        <description>Is this a digital asset that we work with?</description>
        <name>Does_Asset_Exist</name>
        <label>Does Token or Coin Exist</label>
        <locationX>1106</locationX>
        <locationY>611</locationY>
        <defaultConnector>
            <targetReference>Token_doesn_t_exist_in_system</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Digital Asset does not exist</defaultConnectorLabel>
        <rules>
            <name>Native_Digital_Coin_is_Active</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Token_Asset.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Token_Asset.Active__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Asset__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>XRP</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Network_Name__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>XRP_Mainnet</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Save_Successful_Coin_Transaction</targetReference>
            </connector>
            <label>XRP Native Coin</label>
        </rules>
        <rules>
            <name>Token_Exists_and_is_Active</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Token_Asset.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Token_Asset.Active__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Token_Contract</targetReference>
            </connector>
            <label>Token Exists and is Active</label>
        </rules>
        <rules>
            <name>Token_Asset_Exists_but_is_NOT_Active</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Token_Asset.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Token_Asset.Active__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Token_is_Inactive</targetReference>
            </connector>
            <label>Digital Asset Exists but is NOT Active</label>
        </rules>
    </decisions>
    <decisions>
        <description>If it is a test transaction, we basically do nothing but match the account wallet.</description>
        <name>Is_Test_Transaction</name>
        <label>Is Test Transaction</label>
        <locationX>578</locationX>
        <locationY>395</locationY>
        <defaultConnector>
            <targetReference>Token_Asset</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not a Test Network Transaction</defaultConnectorLabel>
        <rules>
            <name>TESTTransaction</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Test_Transaction__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>RecordTestTransaction</targetReference>
            </connector>
            <label>TEST Transaction (set via Webhook)</label>
        </rules>
        <rules>
            <name>TEST_Transaction_Webhook_Test</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Network_Name__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>XRP_Mainnet</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BlockNum__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>45184774</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Value__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>1.15821286E8</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Transaction_Timestamp__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <dateTimeValue>2019-02-15T08:00:00.000Z</dateTimeValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Transaction_Timestamp__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <dateTimeValue>2019-02-18T07:59:00.000Z</dateTimeValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Test_Transaction_Webhook</targetReference>
            </connector>
            <label>TEST Transaction - Webhook Test</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checking if we have a matching Token Contract</description>
        <name>Token_Contract_Query</name>
        <label>Token Contract Query</label>
        <locationX>974</locationX>
        <locationY>827</locationY>
        <defaultConnector>
            <targetReference>No_Token_Contract</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Token Contract Does Not Match</defaultConnectorLabel>
        <rules>
            <name>Token_Contract_Matches</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Token_Contract.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Save_Successful_Transaction</targetReference>
            </connector>
            <label>Token Contract Matches</label>
        </rules>
    </decisions>
    <description>Connect the Data from Raw Chain information to Real Data. Error Messages Logged on Token Lookup Failure.</description>
    <environments>Default</environments>
    <formulas>
        <description>Calculated Value</description>
        <name>ConvertedCurrencyValue</name>
        <dataType>Currency</dataType>
        <expression>{!$Record.Value__c} * {!Token_Asset.ConversionRate__c}</expression>
        <scale>6</scale>
    </formulas>
    <interviewLabel>Outbound Blockchain Transaction Mapping {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Outbound Blockchain Transaction Mapping</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Get the Account Wallet. For Outbound Transactions this is the To Address.</description>
        <name>Account_Wallet</name>
        <label>Account Wallet</label>
        <locationX>578</locationX>
        <locationY>287</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Test_Transaction</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Wallet_Address__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.To_Address__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account_Wallet__c</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get the contract that matches.</description>
        <name>Get_Token_Contract</name>
        <label>Get Token Contract</label>
        <locationX>974</locationX>
        <locationY>719</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Token_Contract_Query</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AssetToken__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Token_Asset.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Issuer__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Contract_Address__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>TokenContract__c</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Lookup the Matching Token Data</description>
        <name>Token_Asset</name>
        <label>Token-Asset</label>
        <locationX>1106</locationX>
        <locationY>503</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Does_Asset_Exist</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Failure_to_Find_Token</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Asset__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Asset__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Asset_Token__c</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>ConversionRate__c</queriedFields>
        <queriedFields>Name</queriedFields>
        <queriedFields>Active__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Lookup of the token failed. It doesn&apos;t exist or isn&apos;t active.</description>
        <name>Failure_to_Find_Token</name>
        <label>Failure to Find Token</label>
        <locationX>1898</locationX>
        <locationY>611</locationY>
        <inputAssignments>
            <field>Account_Wallet__c</field>
            <value>
                <elementReference>Account_Wallet.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>System_Notes__c</field>
            <value>
                <stringValue>Failure to Find Tokens. Lookup of the token failed. It doesn&apos;t exist or isn&apos;t active.</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>This can occur because the Network is garbage, the Token doesn&apos;t have a valid contract on that Network, or the Token&apos;s contract didn&apos;t exist at time Web3 Enabler was installed.</description>
        <name>No_Token_Contract</name>
        <label>No Token Contract</label>
        <locationX>1106</locationX>
        <locationY>935</locationY>
        <inputAssignments>
            <field>Account_Wallet__c</field>
            <value>
                <elementReference>Account_Wallet.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>System_Notes__c</field>
            <value>
                <stringValue>Unable to verify the token issuer. If this is a valid token, add the Issuer to the Token and re-assign this transaction. Future transactions will detect it.</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Just update system notes and move on.</description>
        <name>RecordTestTransaction</name>
        <label>Test Transaction</label>
        <locationX>50</locationX>
        <locationY>503</locationY>
        <inputAssignments>
            <field>Account_Wallet__c</field>
            <value>
                <elementReference>Account_Wallet.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>System_Notes__c</field>
            <value>
                <stringValue>Test Transaction</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Happy path completed. We have a valid transaction on a real network.</description>
        <name>Save_Successful_Coin_Transaction</name>
        <label>Save Successful Coin Transaction</label>
        <locationX>578</locationX>
        <locationY>719</locationY>
        <inputAssignments>
            <field>Account_Wallet__c</field>
            <value>
                <elementReference>Account_Wallet.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Asset_Quantity__c</field>
            <value>
                <elementReference>$Record.Value__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Asset_Token__c</field>
            <value>
                <elementReference>Token_Asset.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Network__c</field>
            <value>
                <elementReference>$Record.Network_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>System_Notes__c</field>
            <value>
                <stringValue>Transaction Recorded</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Transaction_Value__c</field>
            <value>
                <elementReference>ConvertedCurrencyValue</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Happy path completed. We have a valid transaction on a real network.</description>
        <name>Save_Successful_Transaction</name>
        <label>Save Successful Transaction</label>
        <locationX>842</locationX>
        <locationY>935</locationY>
        <inputAssignments>
            <field>Account_Wallet__c</field>
            <value>
                <elementReference>Account_Wallet.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Asset_Quantity__c</field>
            <value>
                <elementReference>$Record.Value__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Asset_Token__c</field>
            <value>
                <elementReference>Token_Asset.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Network__c</field>
            <value>
                <elementReference>$Record.Network_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>System_Notes__c</field>
            <value>
                <stringValue>Transaction Recorded</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Transaction_Value__c</field>
            <value>
                <elementReference>ConvertedCurrencyValue</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Just update system notes and move on.</description>
        <name>Test_Transaction_Webhook</name>
        <label>Test Transaction - Webhook</label>
        <locationX>314</locationX>
        <locationY>503</locationY>
        <inputAssignments>
            <field>Account_Wallet__c</field>
            <value>
                <elementReference>Account_Wallet.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>System_Notes__c</field>
            <value>
                <stringValue>Test Transaction</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Test_Transaction__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>No reference to that token exists.</description>
        <name>Token_doesn_t_exist_in_system</name>
        <label>Token doesn&apos;t exist in system</label>
        <locationX>1634</locationX>
        <locationY>719</locationY>
        <inputAssignments>
            <field>Account_Wallet__c</field>
            <value>
                <elementReference>Account_Wallet.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>System_Notes__c</field>
            <value>
                <stringValue>The Token does not exist in the system as a Token Asset. Create one and manually map transaction if desired.</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>The token in the transaction is inactive.</description>
        <name>Token_is_Inactive</name>
        <label>Token is Inactive</label>
        <locationX>1370</locationX>
        <locationY>719</locationY>
        <inputAssignments>
            <field>Account_Wallet__c</field>
            <value>
                <elementReference>Account_Wallet.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>System_Notes__c</field>
            <value>
                <stringValue>The Token Asset is Inactive. No result is recorded.</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>452</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Account_Wallet</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Asset__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Network_Name__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Transaction_Hash__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>From_Address__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>To_Address__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Value__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </filters>
        <object>Outbound_Blockchain_Transaction__c</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
